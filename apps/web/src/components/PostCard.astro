---
import { callSafely } from "astro:actions";
import type { Post, Tags } from "../common/interfaces";
import Tag from "./Tag.astro";

export interface Props {
  content: string;
  timestamp: string;
  tags: Tags[];
}

const { content, timestamp, tags } = Astro.props as unknown as Post;
---

<article class="post-card bg-gray-700">
  <div class="post-content" set:html={content} />

  <div class="post-footer">
    {
      !isNaN(+timestamp) ? (
        <time class="post-date" datetime={new Date(+timestamp).toISOString()}>
          {new Date(+timestamp).toLocaleDateString("en-EN", {
            year: "numeric",
            month: "long",
            day: "numeric",
          })}
        </time>
      ) : (
        <span class="post-date">Invalid Time</span>
      )
    }

    <div class="tags-grid">
      {Array.isArray(tags) && tags.length > 0 &&
          tags.map((tag) => (
            <Tag
              name={tag.name}
              fancyName={tag.fancyName}
              icon={tag.icon}
              href={`/tags/${tag.name}`}
            />
          ))
      }
    </div>
  </div>
</article>

<style is:global>
  .post-card {
    background: rgba(55, 65, 81, 0.7);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    border-radius: 12px;
    padding: 1.5rem;
    margin-bottom: 2rem;
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow:
      0 4px 6px rgba(0, 0, 0, 0.1),
      inset 0 1px 0 rgba(255, 255, 255, 0.05);
    transition: all 0.3s ease;
  }

  .post-content {
    color: hsl(220 13% 90%);
    line-height: 1.7;
    font-size: 1.05rem;
    text-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);
  }

  .post-content > * + * {
    margin-top: 1.25em;
  }

  .post-content h1 {
    font-size: clamp(1.8rem, 5vw, 2.5rem);
    margin: 1.8em 0 1em;
    line-height: 1.3;
    font-weight: 400;
    color: hsl(220 13% 95%);
  }
  .post-content h2 {
    font-size: clamp(1.5rem, 4vw, 2rem);
    margin: 1.6em 0 0.9em;
    line-height: 1.35;
    font-weight: 400;
    color: hsl(220 13% 92%);
  }
  .post-content h3 {
    font-size: clamp(1.3rem, 3.5vw, 1.7rem);
    margin: 1.4em 0 0.8em;
    line-height: 1.4;
    font-weight: 400;
    color: hsl(220 13% 88%);
  }
  .post-content h4 {
    font-size: clamp(1.1rem, 3vw, 1.4rem);
    margin: 1.2em 0 0.7em;
    line-height: 1.45;
    font-weight: 400;
    color: hsl(220 13% 85%);
  }
  .post-content h5 {
    font-size: clamp(1rem, 2.8vw, 1.2rem);
    margin: 1em 0 0.6em;
    line-height: 1.5;
    font-weight: 400;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    color: hsl(220 13% 82%);
  }
  .post-content h6 {
    font-size: clamp(0.9rem, 2.5vw, 1.1rem);
    margin: 0.9em 0 0.5em;
    line-height: 1.55;
    font-weight: 400;
    font-style: italic;
    color: hsl(220 13% 80%);
  }

  .post-content pre {
    position: relative;
    background: rgba(24, 26, 35, 0.8);
    backdrop-filter: blur(6px);
    border-left: 3px solid hsl(210 100% 60%);
    border-radius: 10px;
    margin: 2em 0;
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
    overflow: hidden;
  }
  .code-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: rgba(30, 32, 45, 0.9);
    backdrop-filter: blur(5px);
    padding: 0.5rem 1rem;
    border-radius: 8px 8px 0 0;
    font-family: "Fira Code", monospace;
    font-size: 0.85rem;
    height: 60px;
    color: hsl(220 13% 85%);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    font-weight: 500;
  }

  .code-language {
    text-transform: uppercase;
    font-weight: 500;
  }

  .copy-btn {
    background: transparent;
    border: none;
    color: hsl(220 13% 80%);
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 0.25rem;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    transition: all 0.2s;
    font-size: 0.8rem;
    height: 50px;
  }
  .copy-btn svg {
    width: 14px;
    height: 14px;
    margin-right: 0.1rem;
  }
  .copy-btn:hover {
    background: hsl(220 13% 20%);
    color: hsl(210 100% 70%);
  }

  .post-content pre code {
    display: block;
    padding: 1.5rem;
    overflow-x: auto;
    font-family: "Fira Code", monospace;
    font-size: 0.9em;
    line-height: 1.6;
    color: hsl(220 13% 85%);
  }

  .token.comment,
  .token.prolog,
  .token.doctype,
  .token.cdata {
    color: hsl(220 13% 60%);
  }
  .token.punctuation {
    color: hsl(220 13% 70%);
  }
  .token.property,
  .token.tag,
  .token.boolean,
  .token.number,
  .token.constant,
  .token.symbol,
  .token.deleted {
    color: hsl(330 100% 70%);
  }
  .token.selector,
  .token.attr-name,
  .token.string,
  .token.char,
  .token.builtin,
  .token.inserted {
    color: hsl(120 60% 60%);
  }
  .token.operator,
  .token.entity,
  .token.url,
  .language-css .token.string,
  .style .token.string {
    color: hsl(40 90% 60%);
  }
  .token.atrule,
  .token.attr-value,
  .token.keyword {
    color: hsl(210 100% 70%);
  }
  .token.function,
  .token.class-name {
    color: hsl(50 100% 60%);
  }
  .token.regex,
  .token.important,
  .token.variable {
    color: hsl(280 70% 70%);
  }

  .post-footer {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-top: 2rem;
    align-items: flex-start;
  }

  @media (min-width: 640px) {
    .post-footer {
      flex-direction: row;
      align-items: center;
      justify-content: space-between;
    }
  }

  .post-date {
    color: hsl(220 13% 65%);
    font-size: 0.9rem;
    white-space: nowrap;
  }
</style>

<script is:inline>
  document.querySelectorAll("pre").forEach((pre) => {
    // اگر قبلاً header اضافه شده بود، رد کن
    if (pre.querySelector(".code-header")) return;

    const code = pre.querySelector("code");
    if (!code) return;

    const language = code.className.match(/language-(\w+)/)?.[1] || "code";
    const header = document.createElement("div");
    header.className = "code-header";
    header.innerHTML = `
    <span class="code-language">${language}</span>
    <button class="copy-btn" title="Copy code">
      <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3"/>
      </svg>
      <span>Copy</span>
    </button>
  `;

    pre.insertBefore(header, code);

    const copyBtn = header.querySelector(".copy-btn");
    copyBtn.addEventListener("click", () => {
      navigator.clipboard.writeText(code.textContent).then(() => {
        copyBtn.innerHTML = `
          <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
          </svg>
          <span>Copied!</span>
        `;
        setTimeout(() => {
          copyBtn.innerHTML = `
            <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3"/>
            </svg>
            <span>Copy</span>
          `;
        }, 2000);
      });
    });
  });
</script>
